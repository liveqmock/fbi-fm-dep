<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation=" http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
             http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
             http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
             http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
             http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <context:property-placeholder location="classpath:credit.properties"/>

    <!-- 配置数据库连接池 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${pub.platform.db.ConnectionManager.sDBDriver}"/>
        <property name="url" value="${pub.platform.db.ConnectionManager.sConnStr}"/>
        <property name="username" value="${pub.platform.db.ConnectionManager.user}"/>
        <property name="password" value="${pub.platform.db.ConnectionManager.passwd}"/>
        <property name="maxActive" value="15"/>
        <property name="maxIdle" value="5"/>
    </bean>

    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- enable component scanning (beware that this does not enable mapper scanning!) -->
    <context:component-scan base-package="skyline,monitor"/>

    <!-- enable autowire -->
    <context:annotation-config/>

    <!--<tx:jta-transaction-manager />-->

    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven/>

    <!-- define the SqlSessionFactory, notice that configLocation is not needed when you use MapperFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations">
            <list>
                <value>classpath:skyline/repository/mapper/**/*.xml</value>
                <value>classpath:monitor/repository/mapper/**/*.xml</value>
            </list>
        </property>
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage"
                  value="skyline.repository.dao,monitor.repository.dao"/>
    </bean>

    <!--quartz-->
    <!-- 自动检测系统预警信息 -->

    <!-- <bean id="sysEventScanJobDetailBean"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="systemEventWarnHandler"/>
        <property name="targetMethod" value="handleWarn"/>
    </bean>
    <bean id="eventScanCronTriggerBean" lazy-init="false" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="sysEventScanJobDetailBean"/>
        <property name="cronExpression" value="0 01 14 * * ?"/>
    </bean>

    &lt;!&ndash; 设置调度 &ndash;&gt;
    <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="eventScanCronTriggerBean"/>
            </list>
        </property>
        <property name="quartzProperties">
            <props>
                <prop key="org.quartz.threadPool.threadCount">5</prop>
                <prop key="org.quartz.scheduler.instanceId">AUTO</prop>
            </props>
        </property>
    </bean>-->

    <!--     Quartz 数据库持久化集群设置 -->
    <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="applicationContextSchedulerContextKey" value="applicationContextKey"/>
        <property name="configLocation" value="classpath:quartz.properties"/>
    </bean>
    <bean id="jobDetail" class="org.springframework.scheduling.quartz.JobDetailBean">
        <property name="jobClass">
            <value>monitor.warn.scheduler.SysQuartzJobBean</value>
        </property>

        <property name="jobDataAsMap">
            <map>
                <entry key="simpleService">
                    <ref bean="simpleService"/>
                </entry>
            </map>
        </property>
    </bean>

</beans>
